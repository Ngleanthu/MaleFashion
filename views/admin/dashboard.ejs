<%- include('admin-main', { title: 'Dashboard', body: `
    ` }) %>
<div class="flex-1 p-6">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Card 1 -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="text-xl font-semibold text-gray-800">Tổng số người dùng</div>
            <div class="mt-4 text-4xl font-bold text-blue-600"><%= totalUsers %></div>
        </div>
        <!-- Card 2 -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="text-xl font-semibold text-gray-800">Doanh thu tháng này</div>
            <div class="mt-4 text-4xl font-bold text-green-600"><%= new Intl.NumberFormat('vi-VN').format(totalRevenue * 1000) %>₫</div>
        </div>
        <!-- Card 3 -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="text-xl font-semibold text-gray-800">Tổng số đơn hàng</div>
            <div class="mt-4 text-4xl font-bold text-yellow-600"><%= totalOrders %></div>
        </div>
    </div>

    <!-- Chart Section -->
    <div class="mt-8 bg-white p-6 rounded-lg shadow-md">
        <div class="flex justify-between items-center">
            <div class="text-xl font-semibold text-gray-800">Biểu đồ doanh thu</div>
            <select id="revenueRange" class="border rounded p-2">
                <option value="day">Ngày</option>
                <option value="week" selected>Tuần</option>
                <option value="month">Tháng</option>
            </select>
        </div>
        <div class="mt-4">
            <canvas id="revenueChart" class="h-64"></canvas>
        </div>
    </div>

    <!-- Top Products Section -->
    <div class="mt-8 bg-white p-6 rounded-lg shadow-md">
        <div class="flex justify-between items-center">
            <div class="text-xl font-semibold text-gray-800">Top sản phẩm doanh thu cao nhất</div>
            <select id="topProductsRange" class="border rounded p-2">
                <option value="day">Day</option>
                <option value="week" selected>Week</option>
                <option value="month">Month</option>
            </select>
        </div>
        <div class="mt-4">
            <canvas id="topProductsChart" class="h-64"></canvas>
        </div>
    </div>
</div>
</div> 
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    let revenueChart, topProductsChart;

    async function fetchRevenueData(range) {
        const response = await fetch(`/admin/dashboard/revenue-report?range=${range}`);
        return response.json();
    }

    async function fetchTopProducts(range) {
        const response = await fetch(`/admin/dashboard/top-products?range=${range}`);
        return response.json();
    }

    async function renderRevenueChart(range) {
        const data = await fetchRevenueData(range);
        const ctx = document.getElementById('revenueChart').getContext('2d');
        if (revenueChart) revenueChart.destroy();
        revenueChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: data.map(item => item.date),
                datasets: [{
                    label: 'Doanh thu',
                    data: data.map(item => item.amount),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    async function renderTopProductsChart(range) {
        const data = await fetchTopProducts(range);
        const ctx = document.getElementById('topProductsChart').getContext('2d');
        if (topProductsChart) topProductsChart.destroy();
        topProductsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(item => item.name),
                datasets: [{
                    label: 'Doanh thu',
                    data: data.map(item => item.revenue),
                    backgroundColor: 'rgba(255, 206, 86, 0.2)',
                    borderColor: 'rgba(255, 206, 86, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    document.addEventListener('DOMContentLoaded', () => {
        const revenueRange = document.getElementById('revenueRange');
        const topProductsRange = document.getElementById('topProductsRange');

        renderRevenueChart(revenueRange.value);
        renderTopProductsChart(topProductsRange.value);

        revenueRange.addEventListener('change', () => {
            renderRevenueChart(revenueRange.value);
        });

        topProductsRange.addEventListener('change', () => {
            renderTopProductsChart(topProductsRange.value);
        });
    });
</script>

</body>
</html>
