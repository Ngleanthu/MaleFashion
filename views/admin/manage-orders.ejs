<%- include('admin-main', { title: 'Order Management', body: `
    <h1 class="text-2xl font-bold text-gray-800 mb-4">Order Management</h1>
    <p class="text-gray-600">Manage customer orders in the store.</p>

    <!-- Bộ lọc và tìm kiếm -->
    <div class="bg-white shadow-md rounded-lg p-6 mb-6 mt-6">
        <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-6">

            <!-- Lọc theo trạng thái đơn hàng -->
            <div>
                <label for="filterStatus" class="block text-sm font-semibold text-gray-700 mb-2">Filter by Status</label>
                <select id="filterStatus" class="w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2">
                    <option value="">All Statuses</option>
                    <option value="Pending">Pending</option>
                    <option value="Shipped">Shipped</option>
                    <option value="Delivered">Delivered</option>
                </select>
            </div>

            <!-- Lọc theo ngày -->
            <div>
                <label for="sortDate" class="block text-sm font-semibold text-gray-700 mb-2">Sort by Date</label>
                <select id="sortDate" class="w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 p-2">
                    <option value="0">Ascending</option>
                    <option value="1">Descending</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Danh sách đơn hàng -->
    <div class="mt-6 bg-white shadow-md rounded-lg p-6">
        <table id="orderList" class="min-w-full border border-gray-200 rounded-md overflow-hidden">
            <thead class="bg-gray-100">
                <tr>
                    <th class="px-4 py-3 text-left text-sm font-semibold text-gray-700">ID</th>
                    <th class="px-4 py-3 text-left text-sm font-semibold text-gray-700">Customer</th>
                    <th class="px-4 py-3 text-left text-sm font-semibold text-gray-700">Date</th>
                    <th class="px-4 py-3 text-left text-sm font-semibold text-gray-700">Status</th>
                    <th class="px-4 py-3 text-left text-sm font-semibold text-gray-700">Actions</th>
                </tr>
            </thead>

            ` }) %>
            <tbody>
                <% let numberCnt = 0 %>
                <% if (orders && orders.length > 0) { %>
                    <% orders.forEach(function(order) { %>
                        <tr class="border-b hover:bg-gray-50">
                            <% numberCnt += 1 %>
                            <td class="border px-4 py-3"><%= numberCnt %></td>
                            <td class="border px-4 py-3"><%= order.user.name %></td>
                            <td class="border px-4 py-3"><%= String(order.createdAt).replace(" ", ", ") %></td>                                                    
                            <td class="border px-4 py-3">
                                <span class="px-2 py-1 rounded-full 
                                    <%= order.status === 'Pending' ? 'bg-yellow-100 text-yellow-700' : '' %>
                                    <%= order.status === 'Shipped' ? 'bg-blue-100 text-blue-700' : '' %>
                                    <%= order.status === 'Delivered' ? 'bg-green-100 text-green-700' : '' %>
                                    <%= order.status === 'Canceled' ? 'bg-red-100 text-red-700' : '' %>
                                    ">
                                    <%= order.status %>
                                </span>
                            </td>
                            <td class="border px-4 py-2">                            
                                    <div class="flex space-x-2">
                                        <button onclick="showModal('<%= order._id %>')" 
                                            class="bg-blue-500 hover:bg-blue-700 text-white text-sm px-3 py-1 rounded-md shadow">
                                            View Details
                                        </button>                                    
                                        <button onclick="window.location.href='/admin/manage-orders/update/<%= order._id %>'" 
                                            class="bg-red-500 hover:bg-red-700 text-white text-sm px-3 py-1 rounded-md shadow">
                                            Update
                                        </button>
                                    </div>                                                                                                                 
                            </td>
                        </tr>

                        <!-- Modal for each order -->
                        <div id="orderModal_<%= order._id %>" class="hidden fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center">
                            <div class="bg-white p-6 rounded-lg shadow-lg w-4/5 max-w-6xl">
                                <h2 class="text-2xl font-semibold">Order Details</h2>
                                <div id="modalContent_<%= order._id %>">
                                    <!-- Render thông tin đơn hàng -->
                                    <p><strong>Order ID:</strong> <%= order._id %></p>
                                    <p><strong>Customer Name:</strong> <%= order.user.name %></p>
                                    <p><strong>Order Date:</strong> <%= String(order.createdAt).replace(" ", ", ") %></p>
                                    <p><strong>Status:</strong> <%= order.status %></p>
                                    
                                    <h3 class="mt-4 text-lg font-semibold">Product Details:</h3>
                                    <% let totalPrice = 0;
                                        order.products.forEach(function(item) {
                                            totalPrice += item.product.price * item.quantity %>
                                        <div class="flex space-x-4 mb-4">                                        
                                            <img src="<%= item.product.imgUrl %>" alt="<%= item.product.title %>" class="w-32 h-32 object-cover rounded-lg" style="width: 90px; height: 90px; object-fit: cover;">
                                            <div class="flex flex-wrap space-x-6">
                                                <div>
                                                    <p><strong>Title:</strong> <%= item.product.title %></p>
                                                </div>                                                
                                                <div>
                                                    <p><strong>Brand:</strong> <%= item.product.brand %></p>
                                                </div>      
                                                <div>
                                                    <p><strong>Category:</strong> <%= item.product.category %></p>
                                                </div>                                       
                                                <div>
                                                    <p><strong>Size:</strong> <%= item.product.size %></p>
                                                </div>
                                                <div>
                                                    <p><strong>Price:</strong> ₫<%= new Intl.NumberFormat('vi-VN').format(item.product.price * 1000) %>₫</p>
                                                </div>
                                                <div>
                                                    <p><strong>Quantity:</strong> <%= item.quantity %></p>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    <% }); %>
                                    <div class="mt-4 text-center" >
                                        <h1><strong>Order Total:</strong> <%= new Intl.NumberFormat('vi-VN').format(totalPrice * 1000) %>₫</h1>
                                    </div>
                                </div>
                                <div class="text-center">
                                    <button onclick="closeModal('<%= order._id %>')" class="mt-4 bg-red-500 text-white px-4 py-2 rounded-md">Close</button>
                                </div>
                            </div>
                        </div>
                        
                        
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="6" class="text-center py-3 text-gray-600">No orders found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>

        <div class="row">
            <div class="col-lg-12">
                <div id="paging" class="product__pagination">
                    <% 
                        const maxPagesToShow = 2; // Số lượng trang tối đa hiển thị liền kề
                        const startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                        const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
                    %>
                
                    <!-- Trang trước -->
                    <% if (currentPage > 1 && totalPages != 0) { %>
                        <a data-value="<%= currentPage - 1 %>">&laquo;</a>
                    <% } %>
                
                    <!-- Trang đầu nếu cần -->
                    <% if (startPage > 1) { %>
                        <a data-value="1">1</a>
                        <% if (startPage > 2) { %>
                            <span>...</span>
                        <% } %>
                    <% } %>
                
                    <!-- Hiển thị các trang liền kề -->
                    <% for (let i = startPage; i <= endPage; i++) { %>
                        <a 
                            class="<%= currentPage === i ? 'active' : '' %>" 
                            data-value="<%= i %>">
                            <%= i %>
                        </a>
                    <% } %>
                
                    <!-- Trang cuối nếu cần -->
                    <% if (endPage < totalPages) { %>
                        <% if (endPage < totalPages - 1) { %>
                            <span>...</span>
                        <% } %>
                        <a data-value="<%= totalPages %>"><%= totalPages %></a>
                    <% } %>
                
                    <!-- Trang kế -->
                    <% if (currentPage < totalPages) { %>
                        <a data-value="<%= currentPage + 1 %>">&raquo;</a>
                    <% } %>
                </div>
                
            </div>
        </div>
    </div>

<script>
    let currentPage = 1;
    const ITEMS_PER_PAGE = 2;
    // Hàm mở modal
    function showModal(orderId) {
        const modal = document.getElementById(`orderModal_${orderId}`);
        modal.classList.remove('hidden');
    }

    // Hàm đóng modal
    function closeModal(orderId) {
        const modal = document.getElementById(`orderModal_${orderId}`);
        modal.classList.add('hidden');
    }

    // Đảm bảo modal đóng khi người dùng nhấn ra ngoài
    window.onclick = function(event) {
        if (event.target.classList.contains('fixed')) {
            event.target.classList.add('hidden');
        }
    };

    // Lấy các phần tử DOM
// Định nghĩa các phần tử DOM
const filterStatus = document.getElementById('filterStatus');
const filterDate = document.getElementById('sortDate');
const paging = document.getElementById('paging');

// Đối tượng quản lý các phần tử cần cập nhật DOM
const elements = {
    orderList: document.getElementById('orderList'),
    paging: paging
};

// Xử lý sự kiện khi thay đổi bộ lọc
const handleFilterChange = () => {
    currentPage = 1;  // Reset về trang 1 khi filter thay đổi
    const statusValue = filterStatus.value;
    const dateValue = filterDate.value;

    sendAjaxRequest(statusValue, dateValue);
};

filterStatus.addEventListener('change', handleFilterChange);
filterDate.addEventListener('change', handleFilterChange);

// Gửi AJAX request với bộ lọc và phân trang
async function sendAjaxRequest(statusValue, dateValue) {
    try {
        const params = new URLSearchParams();
        if (statusValue) params.append('status', statusValue);
        if (dateValue) params.append('date', dateValue);

        params.append('page', currentPage);
        params.append('limit', ITEMS_PER_PAGE);

        const filters = params.toString();

        const response = await fetch(`/admin/filterOrder?${filters}`, {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' }
        });

        const html = await response.text();
        updateDOM(html);
    } catch (error) {
        console.error('Filter request failed:', error);
    }
}

// Cập nhật DOM sau khi nhận dữ liệu từ server
function updateDOM(html) {
    const doc = new DOMParser().parseFromString(html, 'text/html');
    const sections = ['orderList', 'paging'];

    sections.forEach(section => {
        const newElement = doc.querySelector(`#${section}`);
        const currentElement = elements[section];
        if (newElement && currentElement) {
            currentElement.innerHTML = newElement.innerHTML;
        }
    });

    // Kích hoạt lại sự kiện phân trang
    setupPaginationListener();
}

// Xử lý sự kiện khi nhấn vào phân trang
function handlePaginationClick(event) {
    if (event.target.tagName !== 'A') return;
    event.preventDefault();

    const clickedLink = event.target;
    updateActivePage(clickedLink);

    const statusValue = filterStatus.value;
    const dateValue = filterDate.value;

    sendAjaxRequest(statusValue, dateValue);
}

// Cập nhật trang hiện tại khi nhấn phân trang
function updateActivePage(clickedLink) {
    currentPage = clickedLink.getAttribute('data-value');
    const allLinks = elements.paging.querySelectorAll('a');
    allLinks.forEach(link => link.classList.remove('active'));
    clickedLink.classList.add('active');
}

// Kích hoạt sự kiện click cho các liên kết phân trang
function setupPaginationListener() {
    if (elements.paging) {
        elements.paging.addEventListener('click', handlePaginationClick);
    }
}

// Gọi setup khi tải trang
setupPaginationListener();


</script>

